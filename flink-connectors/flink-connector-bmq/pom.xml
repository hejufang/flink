<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>flink-connectors</artifactId>
		<groupId>org.apache.flink</groupId>
		<version>1.11-byted-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>flink-connector-bmq</artifactId>

	<properties>
		<flink.format.parquet.version>1.10.0</flink.format.parquet.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.bytedance</groupId>
			<artifactId>bmq-client</artifactId>
			<version>1.0.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.annotation</groupId>
					<artifactId>javax.annotation-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-impl</artifactId>
				</exclusion>
			</exclusions>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-common</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-parquet_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-mapreduce-client-core</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-runtime-blink_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-hadoop</artifactId>
			<version>${flink.format.parquet.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.xerial.snappy</groupId>
					<artifactId>snappy-java</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- test dependencies -->

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils-junit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.parquet</groupId>
			<artifactId>parquet-avro</artifactId>
			<version>${flink.format.parquet.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>it.unimi.dsi</groupId>
					<artifactId>fastutil</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<profiles>
		<!-- Create SQL Client uber jars by default -->
		<profile>
			<id>sql-jars</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<executions>
							<execution>
								<id>shade-flink</id>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<filters>
										<filter>
											<artifact>*:*</artifact>
											<excludes>
												<exclude>module-info.class</exclude>
												<exclude>META-INF/*.SF</exclude>
												<exclude>META-INF/*.DSA</exclude>
												<exclude>META-INF/*.RSA</exclude>
											</excludes>
										</filter>
									</filters>
									<artifactSet>
										<includes>
											<include>*:*</include>
										</includes>
									</artifactSet>
									<relocations>
										<!-- relocate the dependencies -->
										<relocation>
											<pattern>org.apache.commons</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.apache.commons</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.http</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.apache.http</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.kafka</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.apache.kafka</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.parquet</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.apache.parquet</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.thrift</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.apache.thrift</shadedPattern>
										</relocation>
										<relocation>
											<pattern>shaded.parquet</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.parquet</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.mq</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.bytedance.mq</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.bmq</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.bytedance.bmq</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.commons</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.bytedance.commons</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.metrics</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.bytedance.metrics</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.fasterxml.jackson</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.fasterxml.jackson</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.byted.infsec</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.byted.infsec</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.google.common</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.google.common</shadedPattern>
										</relocation>
										<relocation>
											<pattern>okhttp3</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.okhttp3</shadedPattern>
										</relocation>
										<relocation>
											<pattern>okio</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.okio</shadedPattern>
										</relocation>
										<relocation>
											<pattern>net.jpountz.lz4</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.net.jpountz.lz4</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.github.luben</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.github.luben</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.codahale.metrics</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.codahale.metrics</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.codehaus.jackson</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.codehaus.jackson</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.github.benmanes.caffeine</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.github.benmanes.caffeine</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.bouncycastle</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.org.bouncycastle</shadedPattern>
										</relocation>
										<relocation>
											<pattern>net.jpountz</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.net.jpountz</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.auth0.jwt</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.auth0.jwt</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.wealoha.thrift</pattern>
											<shadedPattern>org.apache.flink.connector.bmq.shaded.com.wealoha.thrift</shadedPattern>
										</relocation>
									</relocations>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!-- Generate Test class from avro schema -->
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<version>${avro.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<testSourceDirectory>${project.basedir}/src/test/resources/avro</testSourceDirectory>
							<testOutputDirectory>${project.basedir}/src/test/java/</testOutputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
