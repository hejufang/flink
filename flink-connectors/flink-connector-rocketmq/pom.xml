<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>flink-connectors</artifactId>
		<groupId>org.apache.flink</groupId>
		<version>1.11-byted-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>flink-connector-rocketmq</artifactId>

	<dependencies>
		<dependency>
			<groupId>com.bytedance</groupId>
			<artifactId>java-rocketmq-client2</artifactId>
			<version>2.0.13-2</version>
			<exclusions>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>logback-core</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
				<exclusion>
					<artifactId>scala-library</artifactId>
					<groupId>org.scala-lang</groupId>
				</exclusion>
				<exclusion>
					<artifactId>okhttp</artifactId>
					<groupId>com.squareup.okhttp3</groupId>
				</exclusion>
				<exclusion>
					<artifactId>okhttp</artifactId>
					<groupId>com.squareup.okhttp</groupId>
				</exclusion>
				<exclusion>
					<artifactId>okio</artifactId>
					<groupId>com.squareup.okio</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-core</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-common</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-catalog-common</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>spring-cloud-circuitbreaker-spring-retry</artifactId>
					<groupId>org.springframework.cloud</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-planner-blink_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>5.1.4.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-json</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils_${scala.binary.version}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>sql-jars</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-shade-plugin</artifactId>
						<executions>
							<execution>
								<id>shade-flink</id>
								<phase>package</phase>
								<goals>
									<goal>shade</goal>
								</goals>
								<configuration>
									<artifactSet>
										<includes>
											<include>*:*</include>
										</includes>
									</artifactSet>
									<relocations>
										<relocation>
											<pattern>org.byted.infsec</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.byted.infsec</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.byted.security</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.byted.security</shadedPattern>
										</relocation>
										<relocation>
											<pattern>META-INF/native/liborg_byted_security_shaded</pattern>
											<shadedPattern>META-INF/native/liborg_apache_flink_connector_rocketmq_shaded_org_byted_security_shaded</shadedPattern>
										</relocation>
										<relocation>
											<pattern>io.grpc</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.io.grpc</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.google.common</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.google.common</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.google.protobuf</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.google.protobuf</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.commons</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.apache.commons</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.fasterxml.jackson</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.fasterxml.jackson</shadedPattern>
										</relocation>
										<relocation>
											<pattern>io.netty</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.io.netty</shadedPattern>
										</relocation>
										<relocation>
											<pattern>okio</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.okio</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.squareup.okhttp</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.squareup.okhttp/</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.sun</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.sun/</shadedPattern>
										</relocation>
										<relocation>
											<pattern>javax.xml</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.javax.xml/</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.codahale/</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.codahale</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.auth0</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.auth0</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.google</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.google</shadedPattern>
										</relocation>
										<relocation>
											<pattern>javax.activation</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.javax.activation</shadedPattern>
										</relocation>
										<relocation>
											<pattern>io.perfmark</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.io.perfmark</shadedPattern>
										</relocation>
										<relocation>
											<pattern>io.opencensus</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.io.opencensus</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.checkerframework</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.checkerframework</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.metrics</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.bytedance.metrics</shadedPattern>
										</relocation>
										<relocation>
											<pattern>okhttp3</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.okhttp3</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.commons</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.bytedance.commons</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.apache.flink.connector.catalog</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.apache.flink.connector.catalog</shadedPattern>
										</relocation>
										<relocation>
											<pattern>kotlin</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.kotlin</shadedPattern>
										</relocation>
										<relocation>
											<pattern>org.springframework</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.org.springframework</shadedPattern>
										</relocation>
										<relocation>
											<pattern>com.bytedance.schema.registry</pattern>
											<shadedPattern>org.apache.flink.connector.rocketmq.shaded.com.bytedance.schema.registry</shadedPattern>
										</relocation>
										<!-- For compression related dependency (snappy/zstd/lz4), we should not only relocate
										class files, but also .so files. Or we will encounter java.lang.UnsatisfiedLinkError.
										Currently, job using different MQ connector with compression mode can work well.
										But it still leave potential risk, need to handle relocation in the future -->
									</relocations>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
